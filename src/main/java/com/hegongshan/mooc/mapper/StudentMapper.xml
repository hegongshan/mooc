<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hegongshan.mooc.dao.IStudentDAO">
	<resultMap type="student" id="StudentResult">
		<id property="studentId" column="student_id"/>
		<result property="username" column="username"/>
		<result property="password" column="password"/>	
		<result property="nickname" column="nickname"/>
		<result property="email" column="email"/>
		<result property="imageSrc" column="image_src"/>
		<result property="sex" column="sex"/>
		<result property="birthday" column="birthday"/>
		<result property="address" column="address"/>
		<result property="profile" column="profile"/>
		<result property="status" column="status"/>
		<result property="activeCode" column="active_code"/>		
		<result property="registerTime" column="register_time"/>
		<collection property="courses" column="student_id" select="com.hegongshan.mooc.dao.ICourseDAO.listCourseByStudentId"/>
	</resultMap>
	
	<insert id="doInsert" parameterType="student">
		insert into t_student (username,password,nickname,email,active_code,register_time) 
		values (#{username},#{password},#{nickname},#{email},#{activeCode},now())
	</insert>
		
	<update id="doUpdate" parameterType="student">
		update t_student
		<set>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="nickname != null">
				nickname = #{nickname},
			</if>
			<if test="sex != null">
				sex = #{sex},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="address != null">
				address = #{address},
			</if>
			<if test="profile != null">
				profile = #{profile},
			</if>
			<if test="imageSrc != null">
				image_src = #{imageSrc},
			</if>
		</set>
		where student_id = #{studentId}
	</update>
	
	<delete id="doRemove" parameterType="Integer">
		delete from t_student where student_id = #{studentId}
	</delete>	
	
	<select id="findById" parameterType="Integer" resultMap="StudentResult">
		select * from t_student where student_id = #{studentId}
	</select>
	
	<select id="getStudentByUsername" parameterType="String" resultMap="StudentResult">
		select * from t_student where username = #{username}
	</select>
	
	<select id="findByUsernameAndPassword" parameterType="student" resultMap="StudentResult" >
		select * 
		from t_student 
		where username = #{username} and password = #{password}
	</select>
		
	<insert id="saveCourseToMyCourse" parameterType="Map">
		insert into t_r_student_course (student_id,course_id) values (#{studentId},#{courseId})
	</insert>
	
	<delete id="removeCourseFromMyCourse" parameterType="Integer">
		delete from t_r_student_course where student_id = #{studentId} and course_id = #{courseId}
	</delete>
	
	<select id="countMyCourseByStudentIdAndCourseId" resultType="Integer">
		select count(r_id)
		from t_r_student_course
		where course_id = #{courseId} and student_id = #{studentId}
	</select>
	
	<select id="listStudentByCondition" parameterType="Map" resultMap="StudentResult">
		select * from t_student
		<choose>
			<when test="condition=='whitelist'">
				where status != 2
			</when>
			<when test="condition=='blacklist'">
				where status = 2
			</when>
		</choose>
	</select>
</mapper>
